@page
@using BusinessObject
@model DentistBooking.Pages.StaffPages.ProcessingAppointmentModel
@{
    ViewData["Title"] = "Appointment Detail";
    //Layout = "~/Pages/Shared/_StaffLayout.cshtml";
    Layout = null;
    var resultMessage = TempData["ProcessingAppointment"] as string;
    var resultMessageError = TempData["ProcessingAppointmentError"] as string;
    var result = TempData["ProcessingAppointment_DentistSlot"] as string;
}

<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

<div class="container mt-5">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0">Appointment Detail</h3>
        </div>
        <div class="card-body">
            @if (Model.Appointment != null)
            {
                <form method="post" asp-page-handler="Update">
                    <input type="hidden" asp-for="@Model.Appointment.AppointmentId" />
                    <input type="hidden" asp-for="@Model.Appointment.CustomerId" />
                    <input type="hidden" id="selectedSlotId" name="Appointment.DentistSlotId" />

                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">Time Start</label>
                        <div class="col-sm-9">
                            <input type="datetime-local" id="timeStart" class="form-control" asp-for="@Model.Appointment.TimeStart" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">Time End</label>
                        <div class="col-sm-9">
                            <input type="datetime-local" class="form-control" asp-for="@Model.Appointment.TimeEnd" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">Diagnosis</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" asp-for="@Model.Appointment.Diagnosis" />
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">Status</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control" asp-for="@Model.Appointment.Status" readonly />
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">Dentist</label>
                        <div class="col-sm-6">
                            <select id="dentistId" name="Appointment.DentistSlot.DentistId" class="form-control">
                                @if (Model.Dentists != null)
                                {
                                    @foreach (var s in Model.Dentists)
                                    {
                                        <option value="@s.UserId">@s.Name</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-sm-3">
                            <button type="button" class="btn btn-info btn-block" id="viewScheduleButton">View Schedule</button>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">Customer</label>
                        <div class="col-sm-9">
                            <input type="text" class="form-control-plaintext" value="@Model.Appointment.Customer?.Name" readonly />
                        </div>
                    </div>

                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">Services</label>
                        <div class="col-sm-9">
                            <select id="serviceId" name="Appointment.ServiceId" class="form-control">
                                @if (Model.Services != null)
                                {
                                    @foreach (var s in Model.Services)
                                    {
                                        <option value="@s.ServiceId">@s.ServiceName</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>

                    <div class="form-group row text-center">
                        <div class="col-sm-9 offset-sm-3">
                            <button type="submit" class="btn btn-primary btn-block">Update</button>
                        </div>
                    </div>
                </form>
            }
            else
            {
                <div class="alert alert-danger" role="alert">
                    Appointment not found.
                </div>
            }
        </div>
        <br />
        <div id="customAlertPlaceholder"></div>
    </div>
</div>

<div class="text-center">
    <a href="./ProcessingAppointmentList" class="btn btn-primary btn-sm mt-3">Back</a>
</div>

<div class="modal fade" id="scheduleModal" tabindex="-1" role="dialog" aria-labelledby="scheduleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="scheduleModalLabel">Dentist Schedule</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Time</th>
                            <th>Appointments</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="scheduleBody">
                        
                    </tbody>
                </table>
                <form id="createSlotForm" asp-page-handler="CreateDentistSlot">
                    <input type="hidden" value="@Model.Appointment.TimeStart"/>
                    <input type="hidden" value="@Model.Appointment.AppointmentId"/>
                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">Slot Time Start</label>
                        <div class="col-sm-9">
                            <input type="time" id="slotTimeStart" name="DentistSlotTimeStart" asp-for="DentistSlotTimeStart" class="form-control" required/>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-3 col-form-label">Slot Time End</label>
                        <div class="col-sm-9">
                            <input type="time" id="slotTimeEnd" name="DentistSlotTimeEnd" asp-for="DentistSlotTimeEnd" class="form-control" required/>
                        </div>
                    </div>
                    <div class="form-group row text-center">
                        <div class="col-sm-9 offset-sm-3">
                            <button type="submit" class="btn btn-success btn-block">Create Dentist Slot</button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
    $(document).ready(function () {
        var resultMessage = '@resultMessage';
        if (resultMessage.trim() !== '') {
            var alertPlaceholder = $('#customAlertPlaceholder');
            var alertHtml = '<div class="alert alert-success alert-dismissible fade show" role="alert">'
                + resultMessage
                + '<button type="button" class="close" data-dismiss="alert" aria-label="Close">'
                + '<span aria-hidden="true">&times;</span>'
                + '</button></div>';
            alertPlaceholder.html(alertHtml);

            setTimeout(function () {
                alertPlaceholder.children('.alert').alert('close');
            }, 3000);
        }
        
        var resultMessageError = '@resultMessageError';
                if (resultMessageError.trim() !== '') {
                    var alertPlaceholder = $('#customAlertPlaceholder');
                    var alertHtml = '<div class="alert alert-success alert-dismissible fade show" role="alert">'
                        + resultMessageError
                        + '<button type="button" class="close" data-dismiss="alert" aria-label="Close">'
                        + '<span aria-hidden="true">&times;</span>'
                        + '</button></div>';
                    alertPlaceholder.html(alertHtml);
        
                    setTimeout(function () {
                        alertPlaceholder.children('.alert').alert('close');
                    }, 3000);
                }
        
        var result = '@result';
                if (result.trim() !== '') {
                    var alertPlaceholder = $('#customAlertPlaceholder');
                    var alertHtml = '<div class="alert alert-success alert-dismissible fade show" role="alert">'
                        + result
                        + '<button type="button" class="close" data-dismiss="alert" aria-label="Close">'
                        + '<span aria-hidden="true">&times;</span>'
                        + '</button></div>';
                    alertPlaceholder.html(alertHtml);
        
                    setTimeout(function () {
                        alertPlaceholder.children('.alert').alert('close');
                    }, 3000);
                }

        $('#serviceId').change(function () {
            var serviceId = $(this).val();
            var appointmentId = @Model.Appointment.AppointmentId;
            $.ajax({
                url: '@Url.Page("/StaffPages/ProcessingAppointment", "DentistByService")',
                data: { serviceId: serviceId },
                type: 'GET',
                success: function (data) {
                    console.log('Data received from server:', data);
                    var dentistSelect = $('#dentistId');
                    dentistSelect.empty();
                    $.each(data, function (index, dentist) {
                        dentistSelect.append('<option value="' + dentist.userId + '">' + dentist.userName + '</option>');
                    });
                },
                error: function () {
                    alert('Error retrieving dentist information.');
                }
            });
        });

        $('#viewScheduleButton').click(function () {
            var dentistId = $('#dentistId').val();
            var timeStart = $('#timeStart').val();
            $.ajax({
                url: '@Url.Page("/StaffPages/ProcessingAppointment", "DentistSchedule")',
                data: { dentistId: dentistId, timeStart: timeStart },
                type: 'GET',
                success: function (data) {
                    console.log(data);
                    var scheduleBody = $('#scheduleBody');
                    scheduleBody.empty();
                    var slots = data.$values; 

                    $.each(slots, function (index, slot) {
                        var appointmentsHtml = '';

                        if (slot.Appointments && slot.Appointments.$values.length > 0) {
                            $.each(slot.Appointments.$values, function (idx, appointment) {
                                var formattedStart = formatDate(new Date(appointment.TimeStart));
                                var formattedEnd = formatDate(new Date(appointment.TimeEnd));

                                appointmentsHtml += '<div>' +
                                    '<strong>' + formattedStart + ' - ' + formattedEnd + '</strong><br>' +
                                    '</div>';
                            });
                        } else {
                            appointmentsHtml = '<div>No appointments</div>';
                        }

                        var formattedSlotStart = formatDate(new Date(slot.TimeStart));
                        var formattedSlotEnd = formatDate(new Date(slot.TimeEnd));

                        var row = '<tr>' +
                            '<td>' + formattedSlotStart + ' - ' + formattedSlotEnd + '</td>' +
                            '<td>' + appointmentsHtml + '</td>' +
                            '<td><button type="button" class="btn btn-success btn-sm book-slot-button" data-slot-id="' + slot.Id + '">Book</button></td>' +
                            '</tr>'
                        scheduleBody.append(row);
                    });

                    $('#scheduleModal').modal('show');
                },
                error: function () {
                    alert('Error retrieving schedule.');
                }
            });
        });
        
        $('#createSlotButton').click(function () {
                    var slotTimeStart = $('#slotTimeStart').val();
                    var slotTimeEnd = $('#slotTimeEnd').val();
                    var date = $('#timeStart').val();
        
                    $.ajax({
                        url: '@Url.Page("/StaffPages/ProcessingAppointment", "CreateDentistSlot")',
                        data: {
                            timeStart: slotTimeStart,
                            timeEnd: slotTimeEnd,
                            date: date
                        },
                        type: 'POST',
                        
                        success: function (data) {
                            alert('Dentist slot created successfully.');
                            $('#scheduleModal').modal('hide');
                        },
                        error: function () {
                            console.log(this.data);
                            alert('Error creating dentist slot.');
                        }
                    });
                });
       


        $(document).on('click', '.book-slot-button', function () {
            var slotId = $(this).attr('data-slot-id');
            console.log(slotId);  
            $('#selectedSlotId').val(slotId);
            $('#scheduleModal').modal('hide');
        });

        function formatDate(date) {
            var day = date.getDate().toString().padStart(2, '0');
            var month = (date.getMonth() + 1).toString().padStart(2, '0');
            var year = date.getFullYear();
            var hours = date.getHours().toString().padStart(2, '0');
            var minutes = date.getMinutes().toString().padStart(2, '0');
            var seconds = date.getSeconds().toString().padStart(2, '0');

            return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;
        }
    });
</script>
